{"ast":null,"code":"var _jsxFileName = \"/home/dima/Desktop/learning/dj-blog/caasy-nextjs-blog-template/components/elements/container/Container.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styling from './Container.module.scss';\nimport elements from '../index';\n/**\n * Renders a container element. This blog renders the elements\n * inside a container next to each other. Works best with two to\n * three elements grouped with a container.\n * @param els {array} array of elements that are grouped by the container\n * @returns {*}\n * @constructor\n */\n\nconst Container = ({\n  elements: els\n}) => __jsx(\"div\", {\n  className: styling.container,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, els.map(element => {\n  const Element = elements[element.type] || (() => null);\n\n  return __jsx(\"div\", {\n    className: styling.nested,\n    key: element.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, __jsx(Element, _extends({}, element, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  })));\n}));\n\nexport default Container;","map":{"version":3,"sources":["/home/dima/Desktop/learning/dj-blog/caasy-nextjs-blog-template/components/elements/container/Container.js"],"names":["React","styling","elements","Container","els","container","map","element","Element","type","nested","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA;;;;;;;;;AAQA,MAAMC,SAAS,GAAG,CAAC;AAAED,EAAAA,QAAQ,EAAEE;AAAZ,CAAD,KACd;AAAK,EAAA,SAAS,EAAEH,OAAO,CAACI,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKD,GAAG,CAACE,GAAJ,CAAQC,OAAO,IAAI;AAChB,QAAMC,OAAO,GAAGN,QAAQ,CAACK,OAAO,CAACE,IAAT,CAAR,KAA2B,MAAM,IAAjC,CAAhB;;AAEA,SACI;AAAK,IAAA,SAAS,EAAER,OAAO,CAACS,MAAxB;AAAgC,IAAA,GAAG,EAAEH,OAAO,CAACI,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD,eAAaJ,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ;AAKH,CARA,CADL,CADJ;;AAcA,eAAeJ,SAAf","sourcesContent":["import React from 'react';\n\nimport styling from './Container.module.scss';\nimport elements from '../index';\n\n/**\n * Renders a container element. This blog renders the elements\n * inside a container next to each other. Works best with two to\n * three elements grouped with a container.\n * @param els {array} array of elements that are grouped by the container\n * @returns {*}\n * @constructor\n */\nconst Container = ({ elements: els }) => (\n    <div className={styling.container}>\n        {els.map(element => {\n            const Element = elements[element.type] || (() => null);\n        \n            return (\n                <div className={styling.nested} key={element.id}>\n                    <Element {...element} />\n                </div>\n            );\n        })}\n    </div>\n);\n\nexport default Container;"]},"metadata":{},"sourceType":"module"}