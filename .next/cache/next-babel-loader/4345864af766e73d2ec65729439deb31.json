{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport API_URL from \"./http-utils\";\nexport function getAllPostIds() {\n  return _getAllPostIds.apply(this, arguments);\n}\n\nfunction _getAllPostIds() {\n  _getAllPostIds = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, posts;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(API_URL);\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            posts = _context.sent;\n            return _context.abrupt(\"return\", posts.map(function (post) {\n              return {\n                params: {\n                  id: post.id.toString(),\n                  all: '/'\n                }\n              };\n            }));\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n  return _getAllPostIds.apply(this, arguments);\n}\n\nexport function getPostData(_x) {\n  return _getPostData.apply(this, arguments);\n}\n\nfunction _getPostData() {\n  _getPostData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return fetch(API_URL + id);\n\n          case 3:\n            res = _context2.sent;\n            _context2.next = 6;\n            return res.json();\n\n          case 6:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 9]]);\n  }));\n  return _getPostData.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/dima/Desktop/learning/dj-blog/caasy-nextjs-blog-template/utils/getPosts.js"],"names":["API_URL","getAllPostIds","fetch","res","json","posts","map","post","params","id","toString","all","console","log","getPostData"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,cAApB;AAGA,gBAAsBC,aAAtB;AAAA;AAAA;;;4EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGmBC,KAAK,CAACF,OAAD,CAHxB;;AAAA;AAGOG,YAAAA,GAHP;AAAA;AAAA,mBAIqBA,GAAG,CAACC,IAAJ,EAJrB;;AAAA;AAIOC,YAAAA,KAJP;AAAA,6CAKQA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI,EAAI;AACrB,qBAAO;AACHC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,EAAE,EAAEF,IAAI,CAACE,EAAL,CAAQC,QAAR,EADA;AAEJC,kBAAAA,GAAG,EAAE;AAFD;AADL,eAAP;AAMH,aAPM,CALR;;AAAA;AAAA;AAAA;AAcCC,YAAAA,OAAO,CAACC,GAAR;;AAdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkBP,gBAAsBC,WAAtB;AAAA;AAAA;;;0EAAO,kBAA2BL,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEmBP,KAAK,CAACF,OAAO,GAAGS,EAAX,CAFxB;;AAAA;AAEON,YAAAA,GAFP;AAAA;AAAA,mBAGcA,GAAG,CAACC,IAAJ,EAHd;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKCQ,YAAAA,OAAO,CAACC,GAAR;;AALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import API_URL from \"./http-utils\";\n\n\nexport async function getAllPostIds() {\n\n    try {\n        const res = await fetch(API_URL)\n        const posts = await res.json()\n        return posts.map(post => {\n            return {\n                params: {\n                    id: post.id.toString(),\n                    all: '/'\n                }\n            }\n        })\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nexport async function getPostData(id) {\n    try {\n        const res = await fetch(API_URL + id)\n        return await res.json()\n    } catch (e) {\n        console.log(e)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}