{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/dima/Desktop/learning/dj-blog/caasy-nextjs-blog-template/pages/post/[id].js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport BlogPost from '../../components/blogPost/BlogPost';\n\n/**\n * Renders the blog post for the given data.\n * @param post\n * @returns {*}\n * @constructor\n */\nvar Post = function Post(post) {\n  return __jsx(BlogPost, {\n    post: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 24\n    }\n  });\n};\n\n_c = Post;\nexport var __N_SSG = true;\nexport default Post;\n/**\n * Loads the blog post from Caasy.\n * @param ctx {object} context that contains the ID of the blog post that should be loaded\n * @returns {Promise<{props: *}>}\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/dima/Desktop/learning/dj-blog/caasy-nextjs-blog-template/pages/post/[id].js"],"names":["React","BlogPost","Post","post"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,QAAP,MAAqB,oCAArB;;AAIA;;;;;;AAMA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,IAAD;AAAA,SAAU,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAV;AAAA,CAAb;;KAAMD,I;;AAEN,eAAeA,IAAf;AAEA","sourcesContent":["import React from 'react';\nimport caasy from '@caasy/sdk-js';\n\nimport BlogPost from '../../components/blogPost/BlogPost';\n\nimport blogConfig from '../../blogConfig';\n\n/**\n * Renders the blog post for the given data.\n * @param post\n * @returns {*}\n * @constructor\n */\nconst Post = (post) => <BlogPost post={post} />;\n\nexport default Post;\n\n/**\n * Loads the blog post from Caasy.\n * @param ctx {object} context that contains the ID of the blog post that should be loaded\n * @returns {Promise<{props: *}>}\n */\nexport const getStaticProps = async (ctx) => {\n    // Determine the ID of the blog post\n    {console.log(ctx, '@@@@@@@@@@@@@@@@')}\n    const postId = ctx.params.id;\n\n    // Fetch the blog post from Caasy\n    const post = await caasy.posts.getById(postId);\n    \n    // Pass the post data to the component\n    return { props: post };\n};\n\n\n/**\n * Determines all the paths for the blog posts.\n * @returns {Promise<{paths: {params: {id: *}}[], fallback: boolean}>}\n */\nexport const getStaticPaths = async () => {\n    // Usually, it's sufficient to initialize the Caasy SDK once\n    // in the entire app. However, when running \"next export\",\n    // this configuration is not persisted and therefore it is\n    // necessary to initialize the SDK every time before using it.\n    caasy.init(blogConfig.caasySDKConfig);\n\n    // Fetch all blog post IDs\n    const allBlogPostIds = await caasy.posts.getAllIds();\n\n    // Get all IDs\n    const paths = allBlogPostIds.map(id => ({ params: { id } }));\n\n    return {\n        fallback: false,\n        paths\n    };\n};\n"]},"metadata":{},"sourceType":"module"}