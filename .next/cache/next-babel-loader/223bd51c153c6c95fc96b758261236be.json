{"ast":null,"code":"var _jsxFileName = \"/home/dima/Desktop/learning/dj-blog/caasy-nextjs-blog-template/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport caasy from '@caasy/sdk-js';\nimport Main from '../components/layout/main/Main';\nimport PostPreview from '../components/postPreview/PostPreview';\nimport PageControls from '../components/pageControls/PageControls';\nimport blogConfig from '../blogConfig';\nimport utils from '../utils/';\nimport { getAllPostIds, getPostData } from '../utils/getPosts';\nimport API_URL from \"../utils/http-utils\";\nimport ReactPaginate from 'react-paginate';\nimport Router, { withRouter } from 'next/router';\n/**\n * Displays all blog posts for a given page number.\n * @param posts {array} all blog posts for the given page\n * @param pageControls {array} contains the pages for the navigation\n * @param currentPage {number} number of the active page\n * @returns {*}\n * @constructor\n */\n\nconst Posts = ({\n  posts,\n  pageControls,\n  currentPage\n}) => __jsx(Main, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}, (posts || []).map(post => __jsx(PostPreview, {\n  key: post.id,\n  id: post.id,\n  title: post.title,\n  previewText: post.text,\n  previewImage: post.image,\n  lastEdit: new Date(post.created_at).toDateString(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }\n})));\n\nexport default Posts;\nexport async function getStaticProps() {\n  try {\n    const res = await fetch(API_URL);\n    const posts = await res.json();\n    return {\n      props: {\n        posts\n      }\n    };\n  } catch (e) {\n    console.log(e);\n  }\n}","map":{"version":3,"sources":["/home/dima/Desktop/learning/dj-blog/caasy-nextjs-blog-template/pages/index.js"],"names":["React","useState","useEffect","caasy","Main","PostPreview","PageControls","blogConfig","utils","getAllPostIds","getPostData","API_URL","ReactPaginate","Router","withRouter","Posts","posts","pageControls","currentPage","map","post","id","title","text","image","Date","created_at","toDateString","getStaticProps","res","fetch","json","props","e","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,OAAOC,IAAP,MAAiB,gCAAjB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,SAAQC,aAAR,EAAuBC,WAAvB,QAAyC,mBAAzC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,aAAnC;AAEA;;;;;;;;;AAQA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA;AAAvB,CAAD,KAEV,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK,CAACF,KAAK,IAAI,EAAV,EAAcG,GAAd,CAAkBC,IAAI,IACnB,MAAC,WAAD;AACI,EAAA,GAAG,EAAEA,IAAI,CAACC,EADd;AAEI,EAAA,EAAE,EAAED,IAAI,CAACC,EAFb;AAGI,EAAA,KAAK,EAAED,IAAI,CAACE,KAHhB;AAII,EAAA,WAAW,EAAEF,IAAI,CAACG,IAJtB;AAKI,EAAA,YAAY,EAAEH,IAAI,CAACI,KALvB;AAMI,EAAA,QAAQ,EAAE,IAAIC,IAAJ,CAASL,IAAI,CAACM,UAAd,EAA0BC,YAA1B,EANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADH,CADL,CAFJ;;AAkBA,eAAeZ,KAAf;AAGA,OAAO,eAAea,cAAf,GAAgC;AACnC,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACnB,OAAD,CAAvB;AACA,UAAMK,KAAK,GAAG,MAAMa,GAAG,CAACE,IAAJ,EAApB;AACA,WAAO;AACHC,MAAAA,KAAK,EAAE;AACHhB,QAAAA;AADG;AADJ,KAAP;AAKH,GARD,CAQE,OAAOiB,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport caasy from '@caasy/sdk-js';\n\nimport Main from '../components/layout/main/Main';\nimport PostPreview from '../components/postPreview/PostPreview';\nimport PageControls from '../components/pageControls/PageControls';\n\nimport blogConfig from '../blogConfig';\nimport utils from '../utils/';\nimport {getAllPostIds, getPostData} from '../utils/getPosts'\nimport API_URL from \"../utils/http-utils\";\n\nimport ReactPaginate from 'react-paginate';\nimport Router, { withRouter } from 'next/router'\n\n/**\n * Displays all blog posts for a given page number.\n * @param posts {array} all blog posts for the given page\n * @param pageControls {array} contains the pages for the navigation\n * @param currentPage {number} number of the active page\n * @returns {*}\n * @constructor\n */\nconst Posts = ({ posts, pageControls, currentPage }) => (\n\n    <Main>\n        {(posts || []).map(post => (\n            <PostPreview\n                key={post.id}\n                id={post.id}\n                title={post.title}\n                previewText={post.text}\n                previewImage={post.image}\n                lastEdit={new Date(post.created_at).toDateString()}\n            />\n        ))}\n\n        {/*<PageControls data={pageControls} active={currentPage} />*/}\n    </Main>\n);\n\nexport default Posts;\n\n\nexport async function getStaticProps() {\n    try {\n        const res = await fetch(API_URL)\n        const posts = await res.json()\n        return {\n            props: {\n                posts,\n            },\n        }\n    } catch (e) {\n        console.log(e)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}