{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dima/Desktop/learning/dj-blog/caasy-nextjs-blog-template/components/elements/container/Container.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styling from './Container.module.scss';\nimport elements from '../index';\n/**\n * Renders a container element. This blog renders the elements\n * inside a container next to each other. Works best with two to\n * three elements grouped with a container.\n * @param els {array} array of elements that are grouped by the container\n * @returns {*}\n * @constructor\n */\n\nvar Container = function Container(_ref) {\n  var els = _ref.elements;\n  return __jsx(\"div\", {\n    className: styling.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, els.map(function (element) {\n    var Element = elements[element.type] || function () {\n      return null;\n    };\n\n    return __jsx(\"div\", {\n      className: styling.nested,\n      key: element.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, __jsx(Element, _extends({}, element, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    })));\n  }));\n};\n\n_c = Container;\nexport default Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["/home/dima/Desktop/learning/dj-blog/caasy-nextjs-blog-template/components/elements/container/Container.js"],"names":["React","styling","elements","Container","els","container","map","element","Element","type","nested","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA;;;;;;;;;AAQA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAaC,GAAb,QAAGF,QAAH;AAAA,SACd;AAAK,IAAA,SAAS,EAAED,OAAO,CAACI,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,GAAG,CAACE,GAAJ,CAAQ,UAAAC,OAAO,EAAI;AAChB,QAAMC,OAAO,GAAGN,QAAQ,CAACK,OAAO,CAACE,IAAT,CAAR,IAA2B;AAAA,aAAM,IAAN;AAAA,KAA3C;;AAEA,WACI;AAAK,MAAA,SAAS,EAAER,OAAO,CAACS,MAAxB;AAAgC,MAAA,GAAG,EAAEH,OAAO,CAACI,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,OAAD,eAAaJ,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADJ;AAKH,GARA,CADL,CADc;AAAA,CAAlB;;KAAMJ,S;AAcN,eAAeA,SAAf","sourcesContent":["import React from 'react';\n\nimport styling from './Container.module.scss';\nimport elements from '../index';\n\n/**\n * Renders a container element. This blog renders the elements\n * inside a container next to each other. Works best with two to\n * three elements grouped with a container.\n * @param els {array} array of elements that are grouped by the container\n * @returns {*}\n * @constructor\n */\nconst Container = ({ elements: els }) => (\n    <div className={styling.container}>\n        {els.map(element => {\n            const Element = elements[element.type] || (() => null);\n        \n            return (\n                <div className={styling.nested} key={element.id}>\n                    <Element {...element} />\n                </div>\n            );\n        })}\n    </div>\n);\n\nexport default Container;"]},"metadata":{},"sourceType":"module"}