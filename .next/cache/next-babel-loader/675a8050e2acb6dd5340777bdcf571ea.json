{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/dima/Desktop/learning/dj-blog/caasy-nextjs-blog-template/pages/index.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Main from '../components/layout/main/Main';\nimport PostPreview from '../components/postPreview/PostPreview';\nimport PageControls from '../components/pageControls/PageControls';\n\n/**\n * Displays all blog posts for a given page number.\n * @param posts {array} all blog posts for the given page\n * @param pageControls {array} contains the pages for the navigation\n * @param currentPage {number} number of the active page\n * @returns {*}\n * @constructor\n */\nvar Posts = function Posts(_ref) {\n  var posts = _ref.posts,\n      pageControls = _ref.pageControls,\n      currentPage = _ref.currentPage;\n  return __jsx(Main, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, console.log(posts), (posts || []).map(function (post) {\n    return __jsx(PostPreview, {\n      key: post.id,\n      id: post.id,\n      title: post.title,\n      previewText: post.description // previewImage={post?.previewImageUrls?.medium || ''}\n      ,\n      lastEdit: post.updatedAt,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    });\n  }), __jsx(PageControls, {\n    data: pageControls,\n    active: currentPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }));\n};\n\n_c = Posts;\nexport var __N_SSG = true;\nexport default Posts;\n/**\n * Fetches all blog posts for the current page\n * number and calculates the navigation.\n * @param ctx\n * @returns {Promise<{props: {pageControls: (*|*[]), currentPage: number, posts: (*|*[])}}>} posts, page controls and page number\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/dima/Desktop/learning/dj-blog/caasy-nextjs-blog-template/pages/index.js"],"names":["React","Main","PostPreview","PageControls","Posts","posts","pageControls","currentPage","console","log","map","post","id","title","description","updatedAt"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,IAAP,MAAiB,gCAAjB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;;AAKA;;;;;;;;AAQA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,YAAV,QAAUA,YAAV;AAAA,MAAwBC,WAAxB,QAAwBA,WAAxB;AAAA,SACV,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,OAAO,CAACC,GAAR,CAAYJ,KAAZ,CADL,EAEK,CAACA,KAAK,IAAI,EAAV,EAAcK,GAAd,CAAkB,UAAAC,IAAI;AAAA,WACnB,MAAC,WAAD;AACI,MAAA,GAAG,EAAEA,IAAI,CAACC,EADd;AAEI,MAAA,EAAE,EAAED,IAAI,CAACC,EAFb;AAGI,MAAA,KAAK,EAAED,IAAI,CAACE,KAHhB;AAII,MAAA,WAAW,EAAEF,IAAI,CAACG,WAJtB,CAKI;AALJ;AAMI,MAAA,QAAQ,EAAEH,IAAI,CAACI,SANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADmB;AAAA,GAAtB,CAFL,EAaI,MAAC,YAAD;AAAc,IAAA,IAAI,EAAET,YAApB;AAAkC,IAAA,MAAM,EAAEC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADU;AAAA,CAAd;;KAAMH,K;;AAkBN,eAAeA,KAAf;AAEA","sourcesContent":["import React from 'react';\nimport caasy from '@caasy/sdk-js';\n\nimport Main from '../components/layout/main/Main';\nimport PostPreview from '../components/postPreview/PostPreview';\nimport PageControls from '../components/pageControls/PageControls';\n\nimport blogConfig from '../blogConfig';\nimport utils from '../utils/';\n\n/**\n * Displays all blog posts for a given page number.\n * @param posts {array} all blog posts for the given page\n * @param pageControls {array} contains the pages for the navigation\n * @param currentPage {number} number of the active page\n * @returns {*}\n * @constructor\n */\nconst Posts = ({ posts, pageControls, currentPage }) => (\n    <Main>\n        {console.log(posts)}\n        {(posts || []).map(post => (\n            <PostPreview\n                key={post.id}\n                id={post.id}\n                title={post.title}\n                previewText={post.description}\n                // previewImage={post?.previewImageUrls?.medium || ''}\n                lastEdit={post.updatedAt}\n            />\n        ))}\n\n        <PageControls data={pageControls} active={currentPage} />\n    </Main>\n);\n\nexport default Posts;\n\n/**\n * Fetches all blog posts for the current page\n * number and calculates the navigation.\n * @param ctx\n * @returns {Promise<{props: {pageControls: (*|*[]), currentPage: number, posts: (*|*[])}}>} posts, page controls and page number\n */\nexport const getStaticProps = async (ctx) => {\n    // Usually, it's sufficient to initialize the Caasy SDK once\n    // in the entire app. However, when running \"next export\",\n    // this configuration is not persisted and therefore it is\n    // necessary to initialize the SDK every time before using it.\n    caasy.init(blogConfig.caasySDKConfig);\n\n    // Determine the page for which the blog posts should be shown\n    const currentPage = +(ctx?.params?.currentPage || '1');\n\n    // Fetch all posts for blog posts for the active page from Caasy\n    const posts = await caasy.posts.getAll(currentPage);\n\n    // Calculate the nnavigation\n    const pageControls = utils.getPages(posts.totalItems, posts.itemsPerPage, currentPage) || [];\n\n    // Pass the posts, page controls and the active page number to the component\n    return { props: { posts: posts.data || [], pageControls, currentPage } };\n};\n"]},"metadata":{},"sourceType":"module"}