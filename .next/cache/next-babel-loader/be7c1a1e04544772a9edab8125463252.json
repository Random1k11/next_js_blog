{"ast":null,"code":"var _jsxFileName = \"/home/dima/Desktop/learning/dj-blog/caasy-nextjs-blog-template/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport caasy from '@caasy/sdk-js';\nimport Main from '../components/layout/main/Main';\nimport PostPreview from '../components/postPreview/PostPreview';\nimport PageControls from '../components/pageControls/PageControls';\nimport blogConfig from '../blogConfig';\nimport utils from '../utils/';\nimport { getAllPostIds, getPostData } from '../utils/getPosts';\nimport API_URL from \"../utils/http-utils\";\n/**\n * Displays all blog posts for a given page number.\n * @param posts {array} all blog posts for the given page\n * @param pageControls {array} contains the pages for the navigation\n * @param currentPage {number} number of the active page\n * @returns {*}\n * @constructor\n */\n\nconst Posts = ({\n  posts,\n  pageControls,\n  currentPage\n}) => __jsx(Main, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}, (posts || []).map(post => console.log(new Date(post.created_at).toISOString().slice(0, 10).replace(/-/g, \"\")) // <PostPreview\n//     key={post.id}\n//     id={post.id}\n//     title={post.title}\n//     previewText={post.text}\n//     previewImage={post.image}\n//     lastEdit={post.created_at.toString()}\n// />\n), __jsx(PageControls, {\n  data: pageControls,\n  active: currentPage,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }\n}));\n\nexport default Posts;\nexport async function getStaticProps() {\n  try {\n    const res = await fetch(API_URL);\n    const posts = await res.json();\n    return {\n      props: {\n        posts\n      }\n    };\n  } catch (e) {\n    console.log(e);\n  }\n}","map":{"version":3,"sources":["/home/dima/Desktop/learning/dj-blog/caasy-nextjs-blog-template/pages/index.js"],"names":["React","caasy","Main","PostPreview","PageControls","blogConfig","utils","getAllPostIds","getPostData","API_URL","Posts","posts","pageControls","currentPage","map","post","console","log","Date","created_at","toISOString","slice","replace","getStaticProps","res","fetch","json","props","e"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,OAAOC,IAAP,MAAiB,gCAAjB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,SAAQC,aAAR,EAAuBC,WAAvB,QAAyC,mBAAzC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA;;;;;;;;;AAQA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA;AAAvB,CAAD,KACV,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK,CAACF,KAAK,IAAI,EAAV,EAAcG,GAAd,CAAkBC,IAAI,IACnBC,OAAO,CAACC,GAAR,CAAY,IAAIC,IAAJ,CAASH,IAAI,CAACI,UAAd,EAA0BC,WAA1B,GAAwCC,KAAxC,CAA8C,CAA9C,EAAgD,EAAhD,EAAoDC,OAApD,CAA4D,IAA5D,EAAiE,EAAjE,CAAZ,CADmB,CAGnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVH,CADL,EAcI,MAAC,YAAD;AAAc,EAAA,IAAI,EAAEV,YAApB;AAAkC,EAAA,MAAM,EAAEC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAdJ,CADJ;;AAmBA,eAAeH,KAAf;AAGA,OAAO,eAAea,cAAf,GAAgC;AACnC,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAChB,OAAD,CAAvB;AACA,UAAME,KAAK,GAAG,MAAMa,GAAG,CAACE,IAAJ,EAApB;AACA,WAAO;AACHC,MAAAA,KAAK,EAAE;AACHhB,QAAAA;AADG;AADJ,KAAP;AAKH,GARD,CAQE,OAAOiB,CAAP,EAAU;AACRZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ;AACH;AACJ","sourcesContent":["import React from 'react';\nimport caasy from '@caasy/sdk-js';\n\nimport Main from '../components/layout/main/Main';\nimport PostPreview from '../components/postPreview/PostPreview';\nimport PageControls from '../components/pageControls/PageControls';\n\nimport blogConfig from '../blogConfig';\nimport utils from '../utils/';\nimport {getAllPostIds, getPostData} from '../utils/getPosts'\nimport API_URL from \"../utils/http-utils\";\n\n/**\n * Displays all blog posts for a given page number.\n * @param posts {array} all blog posts for the given page\n * @param pageControls {array} contains the pages for the navigation\n * @param currentPage {number} number of the active page\n * @returns {*}\n * @constructor\n */\nconst Posts = ({ posts, pageControls, currentPage }) => (\n    <Main>\n        {(posts || []).map(post => (\n            console.log(new Date(post.created_at).toISOString().slice(0,10).replace(/-/g,\"\"))\n\n            // <PostPreview\n            //     key={post.id}\n            //     id={post.id}\n            //     title={post.title}\n            //     previewText={post.text}\n            //     previewImage={post.image}\n            //     lastEdit={post.created_at.toString()}\n            // />\n        ))}\n\n        <PageControls data={pageControls} active={currentPage} />\n    </Main>\n);\n\nexport default Posts;\n\n\nexport async function getStaticProps() {\n    try {\n        const res = await fetch(API_URL)\n        const posts = await res.json()\n        return {\n            props: {\n                posts,\n            },\n        }\n    } catch (e) {\n        console.log(e)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}