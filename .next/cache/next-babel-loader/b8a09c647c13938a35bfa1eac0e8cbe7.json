{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/dima/Desktop/learning/dj-blog/caasy-nextjs-blog-template/pages/authors.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Main from '../components/layout/main/Main';\nimport Author from '../components/author/Author';\n\nvar Authors = function Authors(_ref) {\n  var authors = _ref.authors;\n  return __jsx(Main, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, (authors || []).map(function (author) {\n    return __jsx(Author, {\n      key: author.id,\n      author: author,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 40\n      }\n    });\n  }));\n};\n\n_c = Authors;\nexport var __N_SSG = true;\nexport default Authors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authors\");","map":{"version":3,"sources":["/home/dima/Desktop/learning/dj-blog/caasy-nextjs-blog-template/pages/authors.js"],"names":["React","Main","Author","Authors","authors","map","author","id"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,IAAP,MAAiB,gCAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,SACZ,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACA,OAAO,IAAI,EAAZ,EAAgBC,GAAhB,CAAoB,UAAAC,MAAM;AAAA,WAAI,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACC,EAApB;AAAwB,MAAA,MAAM,EAAED,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ;AAAA,GAA1B,CADL,CADY;AAAA,CAAhB;;KAAMH,O;;AA2CN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport caasy from '@caasy/sdk-js';\n\nimport Main from '../components/layout/main/Main';\nimport Author from '../components/author/Author';\n\nimport blogConfig from '../blogConfig';\n\nconst Authors = ({ authors }) => (\n    <Main>\n        {(authors || []).map(author => <Author key={author.id} author={author} />)}\n    </Main>\n);\n\nexport const getStaticProps = async () => {\n    // Usually, it's sufficient to initialize the Caasy SDK once\n    // in the entire app. However, when running \"next export\",\n    // this configuration is not persisted and therefore it is\n    // necessary to initialize the SDK every time before using it.\n    caasy.init(blogConfig.caasySDKConfig);\n\n    // Fetch the first page of authors\n    const firstPageOfAuthors = await caasy.posts.getAllAuthors();\n\n    // Calculate the total pages of authors to fetch\n    const totalPages = Math.ceil((firstPageOfAuthors.total || 0) / firstPageOfAuthors.itemsPerPage);\n\n    // Store all authors\n    let allAuthors = [...firstPageOfAuthors.data || []];\n\n    // Fetch page by page of authors\n    for (let i = 2; i <= totalPages; i++) {\n        const authors = await caasy.posts.getAllAuthors(2);\n        allAuthors = [...allAuthors, ...authors.data || []];\n    }\n\n    // Store all authors with their latest posts\n    const allAuthorsWithPosts = [];\n\n    // Fetch the latest posts for each author\n    for (let author of allAuthors) {\n        const latestPosts = await caasy.posts.getAllByAuthor(author.id);\n        author.posts = latestPosts.data || [];\n        allAuthorsWithPosts.push(author);\n    }\n\n    // Pass all authors with their latest posts as props to the component\n    console.log(allAuthorsWithPosts)\n    return { props: { authors: allAuthorsWithPosts } };\n};\n\nexport default Authors;\n"]},"metadata":{},"sourceType":"module"}