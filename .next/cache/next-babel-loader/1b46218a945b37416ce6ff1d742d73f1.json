{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dima/Desktop/learning/dj-blog/next_js_blog/components/blogPost/BlogPost.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport Main from '../layout/main/Main';\nimport styling from './BlogPost.module.scss';\n/**\n * Renders a blog post. It dynamically determines the all the elements\n * and renders their corresponding components.\n * @param post {object} data of the blog post\n * @returns {*}\n * @constructor\n */\n\nvar Post = function Post(_ref) {\n  var post = _ref.post;\n\n  var CustomParagraph = function CustomParagraph(_ref2) {\n    var children = _ref2.children;\n    return __jsx(\"h3\", {\n      className: \"testClass\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 47\n      }\n    }, children);\n  };\n\n  var renderers = {\n    code: function code(_ref3) {\n      var language = _ref3.language,\n          value = _ref3.value;\n      return __jsx(SyntaxHighlighter, {\n        language: language,\n        children: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 20\n        }\n      });\n    },\n    paragraph: function paragraph(props) {\n      return __jsx(CustomParagraph, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 31\n        }\n      }));\n    }\n  };\n  return __jsx(Main, {\n    title: post.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styling.header,\n    hidden: !post.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: post.image || '',\n    className: styling.previewImageBackground,\n    alt: \"preview image background\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  })), __jsx(\"article\", {\n    className: styling.elements,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: post.image || '',\n    className: styling.previewImage,\n    alt: \"preview image\",\n    hidden: !post.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), __jsx(\"h1\", {\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, post.title), __jsx(\"div\", {\n    className: styling.wrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, __jsx(ReactMarkdown, {\n    renderers: renderers,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, post.text), __jsx(\"i\", {\n    className: styling.lastEdit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Last edit: \", new Date(post.updated_at).toDateString()))));\n};\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/dima/Desktop/learning/dj-blog/next_js_blog/components/blogPost/BlogPost.js"],"names":["React","ReactMarkdown","Prism","SyntaxHighlighter","Main","styling","Post","post","CustomParagraph","children","renderers","code","language","value","paragraph","props","title","header","image","previewImageBackground","elements","previewImage","wrapper","text","lastEdit","Date","updated_at","toDateString"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAAQC,KAAK,IAAIC,iBAAjB,QAAyC,0BAAzC;AAEA,OAAOC,IAAP,MAAiB,qBAAjB;AAEA,OAAOC,OAAP,MAAoB,wBAApB;AAEA;;;;;;;;AAOA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AACvB,MAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,QAAGC,QAAH,SAAGA,QAAH;AAAA,WAAkB;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BA,QAA3B,CAAlB;AAAA,GAAxB;;AACA,MAAMC,SAAS,GAAG;AACdC,IAAAA,IAAI,EAAE,qBAAuB;AAAA,UAArBC,QAAqB,SAArBA,QAAqB;AAAA,UAAXC,KAAW,SAAXA,KAAW;AACzB,aAAO,MAAC,iBAAD;AAAmB,QAAA,QAAQ,EAAED,QAA7B;AAAuC,QAAA,QAAQ,EAAEC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAHa;AAIdC,IAAAA,SAAS,EAAE,mBAACC,KAAD;AAAA,aAAW,MAAC,eAAD,eAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAX;AAAA;AAJG,GAAlB;AAOA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAER,IAAI,CAACS,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACY,MAAxB;AAAgC,IAAA,MAAM,EAAE,CAACV,IAAI,CAACW,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,GAAG,EAAEX,IAAI,CAACW,KAAL,IAAc,EADvB;AAEI,IAAA,SAAS,EAAEb,OAAO,CAACc,sBAFvB;AAGI,IAAA,GAAG,EAAC,0BAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAQI;AAAS,IAAA,SAAS,EAAEd,OAAO,CAACe,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,GAAG,EAAEb,IAAI,CAACW,KAAL,IAAc,EADvB;AAEI,IAAA,SAAS,EAAEb,OAAO,CAACgB,YAFvB;AAGI,IAAA,GAAG,EAAC,eAHR;AAII,IAAA,MAAM,EAAE,CAACd,IAAI,CAACW,KAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI;AAAI,IAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBX,IAAI,CAACS,KAAzB,CAPJ,EAQI;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACiB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,SAAS,EAAEZ,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCH,IAAI,CAACgB,IAA3C,CADJ,EAEI;AAAG,IAAA,SAAS,EAAElB,OAAO,CAACmB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA4C,IAAIC,IAAJ,CAASlB,IAAI,CAACmB,UAAd,EAA0BC,YAA1B,EAA5C,CAFJ,CARJ,CARJ,CADJ;AAwBH,CAjCD;;KAAMrB,I;AAmCN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport ReactMarkdown from 'react-markdown'\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\n\nimport Main from '../layout/main/Main';\n\nimport styling from './BlogPost.module.scss';\n\n/**\n * Renders a blog post. It dynamically determines the all the elements\n * and renders their corresponding components.\n * @param post {object} data of the blog post\n * @returns {*}\n * @constructor\n */\nconst Post = ({ post }) => {\n    const CustomParagraph = ({ children }) => <h3 className=\"testClass\">{children}</h3>\n    const renderers = {\n        code: ({language, value}) => {\n            return <SyntaxHighlighter language={language} children={value} />\n        },\n        paragraph: (props) => <CustomParagraph {...props} />\n    }\n\n    return (\n        <Main title={post.title}>\n            <div className={styling.header} hidden={!post.image}>\n                <img\n                    src={post.image || ''}\n                    className={styling.previewImageBackground}\n                    alt='preview image background'\n                />\n            </div>\n            <article className={styling.elements}>\n                <img\n                    src={post.image || ''}\n                    className={styling.previewImage}\n                    alt='preview image'\n                    hidden={!post.image}\n                />\n                <h1 align='center'>{post.title}</h1>\n                <div className={styling.wrapper}>\n                    <ReactMarkdown renderers={renderers}>{post.text}</ReactMarkdown>\n                    <i className={styling.lastEdit}>Last edit: {new Date(post.updated_at).toDateString()}</i>\n                </div>\n            </article>\n        </Main>\n    );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}