{"ast":null,"code":"import caasy from '@caasy/sdk-js';\nimport Index, { getStaticProps } from './';\nimport blogConfig from '../blogConfig';\nexport default Index;\nexport { getStaticProps };\n/**\n * Loads the first page of blog posts and uses the meta\n * data to calculate how many pages of posts there will\n * be in total. This is necessary to determine if there\n * is a previous and next page of blog posts.\n * @returns {Promise<{paths: [], fallback: boolean}>} props for each of the sites\n */\n\nexport const getStaticPaths = async () => {\n  // Usually, it's sufficient to initialize the Caasy SDK once\n  // in the entire app. However, when running \"next export\",\n  // this configuration is not persisted and therefore it is\n  // necessary to initialize the SDK every time before using it.\n  caasy.init(blogConfig.caasySDKConfig); // Fetches the first page of blog posts to use the metadata\n\n  const data = await caasy.posts.getAll(); // Calculate how many pages of blog posts there are in total\n\n  const totalPages = Math.ceil((data.totalItems || 0) / data.itemsPerPage); // Prepare props for each of the site\n\n  const paths = [];\n\n  for (let i = 0; i <= totalPages; i++) {\n    paths.push({\n      params: {\n        currentPage: i.toString()\n      }\n    });\n  }\n\n  return {\n    fallback: false,\n    paths\n  };\n};","map":null,"metadata":{},"sourceType":"module"}